// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId Int @id @default(autoincrement()) @map("userId")
  id String @unique @map("id")
  email String @unique @map("email")
  password String @map("password")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  UserInfos UserInfos?
  Character Character[]

  @@map("Users")
}

model UserInfos {
  userInfoId Int @id @default(autoincrement()) @map("userInfoId")
  UserId Int @unique @map("UserId")
  name String @map("name")
  age Int? @map("age")
  gender String @map("gender")
  profileImage String? @map("profileImage")

  user Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("UserInfos")
}

model Character {
  characterId Int @id @default(autoincrement()) @map("characterId")
  UserId Int @map("UserId")
  name String @map("name")
  health Int @default(100) @map("health")
  power Int @default(50) @map("power")
  money Int @default(0) @map("money")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  characterItems CharacterItem[]

  @@map("Character")
}

model Item {
  itemId Int @id @default(autoincrement()) @map("itemId")
  itemCode Int @unique @map("itemCode")
  itemName String @map("itemName")
  itemHealth Int? @map("itemHealth")
  itemPower Int? @map("itemPower")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  characterItems CharacterItem[]

  @@map("Item")
}

model CharacterItem {
  characterItemId Int @id @default(autoincrement()) @map("characterItemId")
  CharacterId Int @map("CharacterId")
  ItemCode Int @map("ItemCode")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  character Character @relation(fields: [CharacterId], references: [characterId], onDelete: Cascade)
  item Item @relation(fields: [ItemCode], references: [itemCode], onDelete: Cascade)

  @@map("CharacterItem")
  @@unique([CharacterId, ItemCode])
}
